<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	
	<context:component-scan base-package="com.demo"/>
	<context:component-scan base-package="com.filesystem"/>
	<context:component-scan base-package="com.geccocrawler.gecco.spring" />

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<bean id="utf8Charset" class="java.nio.charset.Charset"  
        factory-method="forName">  
        <constructor-arg value="UTF-8"/>  
    </bean>  
	
	<mvc:default-servlet-handler/>
	<mvc:annotation-driven>
		<mvc:message-converters>  
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
                <constructor-arg ref="utf8Charset" />  
            </bean>  
        </mvc:message-converters>  
	</mvc:annotation-driven>
	
	<mvc:interceptors> 
		<bean class="com.demo.interceptor.InitInterceptor" />	
 	</mvc:interceptors>
	
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="classpath:config/properties/MyMessage" />	
	</bean>
	
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
		
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="locations">  
			<list>  
                 <value>/WEB-INF/classes/dbconfig.properties</value>  
            </list>  
        </property>  
	</bean> 
<!--  阿里 druid数据库连接池  -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
<!--          数据库基本信息配置 -->
         <property name="url" value="${url}" />  
         <property name="username" value="${username}" />  
         <property name="password" value="${password}" />  
         <property name="driverClassName" value="${driverClassName}" />  
         <property name="filters" value="${filters}" />  
<!--    		 最大并发连接数 -->
         <property name="maxActive" value="${maxActive}" />
<!--          初始化连接数量 -->
         <property name="initialSize" value="${initialSize}" />
<!--          配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${maxWait}" />
<!--          最小空闲连接数 -->
         <property name="minIdle" value="${minIdle}" />  
<!--    		 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
<!--          配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${validationQuery}" />  
         <property name="testWhileIdle" value="${testWhileIdle}" />  
         <property name="testOnBorrow" value="${testOnBorrow}" />  
         <property name="testOnReturn" value="${testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
<!--          打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${removeAbandoned}" />
<!--          1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
<!--          关闭abanded连接时输出错误日志    -->
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>  
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>	
	</bean>
	
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="com.*.entity"/>
<!-- 		<property name="typeAliasesPackage" value="com.filesystem.entity"/> -->
		<property name="mapperLocations" >
			<list>
				<value>classpath*:com/**/dao/**Mapper.xml</value>
				<value>classpath*:com/**/dao/**/**Mapper.xml</value>
			</list>
		</property>
<!-- 		<property name="mapperLocations" value="classpath*:com/filesystem/dao/**/**Mapper.xml"/> -->
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.*.dao"/>
<!-- 		<property name="basePackage" value="com.filesystem.dao"/> -->
	</bean>
	
	<bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="524288000"/>
	    <property name="maxInMemorySize" value="102400" />
	</bean>
	
	
</beans>